/**
  #1 magic number! the value 290px is appr the same as the previous vw distance just before the screen hits the desktop breakpoint
    is set here to freeze the distance on larger screens

 */



.o-grad {
  @include mix-gradient-layer()
}


.c-search {

  position: relative;
  z-index: 1;
  background-color: $color-body-grey;
  overflow: hidden;
  display: flex;
  flex-direction: column;

  @include mix-break(tablet) {
    padding-top: 20vw; // ?
    flex-direction: column-reverse;
  }

  @include mix-break(desktop) {
    padding-top: rem(290px); // #1
  }

}

.c-search__bg {

  //position: relative;
  z-index: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  @include mix-bg-image;

  @include mix-break($until: tablet) {
    //display: none;
  }

  img {
    opacity: 0;
    position: absolute;
    z-index: -1;
    display: none;
  }

  video {

    width: 100%;

    @include mix-break(tablet) {
      width: auto;
      min-width: 100%;
      min-height: 100%;
      @include mix-place-center;
    }
  }
}

.c-search__body {
  position: relative;
  z-index: 1;
  padding-top: 20vw;
  padding-bottom: rem($spacing-unit-large);

  // body has the background image in small break
  @include mix-bg-image;

  @include mix-break(tablet) {
    padding-top: 10vw;
    background-image: none !important;
  }

  @include mix-break(desktop) {
    padding-top: $spacing-unit-large;
  }

  &:after {
    content: '';
    display: block;
    @include mix-gradient-layer($color-blue-chill);
  }
}

.c-search__field {
  @include inuit-clearfix;
  @include mix-center-column;
  position: relative;
  z-index: 1;
  //width: 100%;

  input {
    width: 100%;
    display: inline-block;
    //padding: $spacing-unit;
    margin-bottom: $spacing-unit;
    background-color: rgba(white, 0.7);
    transition: $global-transition;
    float: left;
  }
  button {
    display: inline-block;
    float: right;
    //padding: rem($spacing-unit $spacing-unit-small);
    line-height: 1;
  }

  input,
  button {
    border: 2px solid rgba(white, 0.7);
    border-radius: $global-radius;
    padding: 1em .8em;
    line-height: 1;
    max-height: 3em;

    &:focus {
      outline-color: $color-link-blue-focus;

    }

    &:hover,
    &:focus{
      transform: scale(1.05);
      box-shadow: rgba(white, 0.5) 0 0 10px 10px;
    }

  }

  // input hover
  input {
    &:focus,
    &:hover {
      background-color: white;
      color: $color-body;
    }
  }

  // button focus
  button {
    &:focus {
      outline-color: $color-link-blue-focus;
    }
  }


  @include mix-break(tablet) {
    input {
      width: 85%;
    }
    button {
      width: 10%;
      margin-left: 4%;
    }
    input,
    button,
    label {
    }
    font-size: $inuit-font-size-h4;

  }
}

// LABEL
//////////////////

.c-search__label {

  @include mix-break($until: tablet) {
    display: none;
  }

  display: inline-block;
  position: absolute;
  top: .7em;
  left: .9em;
  //background-color: rgba(deeppink, 0.5);
  //font-size: $inuit-font-size-h4;

  transition: $global-transition;

}

// The magic transition

.c-search__input {
  &:focus {
    ~ label {
      font-size: initial;
      left: 0;
      transform: translateY(-200%);
      color: white;

    }
  }
  &:not(:empty) {
    ~ label {
      font-size: initial;
      left: 0;
      transform: translateY(-200%);
      color: red;

    }
  }
}


@include mix-break(tablet) {
  .c-search__field {
    input::placeholder {
      color: transparent;
    }
  }
}

// CARDS GRID - optional for header
///////////////////////////////////

.c-search__cards {
  position: relative;
  z-index: 1;
  padding: rem($spacing-unit-large 0);
  color: white;
  @include mix-break($until: tablet) {
    background-color: $color-blue-chill;
  }
}
